{"ast":null,"code":"import { MEDIDAS_ROUTE } from \"../index\";\nimport { getClientIdCache } from \"../../cache/auth\";\n// Messages complete\nexport const createMeasurement = async body => {\n  try {\n    const token = getClientIdCache();\n    if (token === null) {\n      return null;\n    }\n    const res = await fetch(MEDIDAS_ROUTE, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": token\n      },\n      body: JSON.stringify(body)\n    });\n    const resData = await res.json();\n    return resData;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};","map":{"version":3,"names":["MEDIDAS_ROUTE","getClientIdCache","createMeasurement","body","token","res","fetch","method","headers","JSON","stringify","resData","json","error","console"],"sources":["C:/Users/danie/Documents/natgas/client/src/routes/medidas/medidas.routes.ts"],"sourcesContent":["import { MEDIDAS_ROUTE } from \"../index\";\r\nimport { getClientIdCache } from \"../../cache/auth\";\r\nimport { IData } from \"../routes.types\";\r\n\r\ninterface IMeasurement {\r\n    measurement: number;\r\n    tableName: string;\r\n}\r\n\r\n// Messages complete\r\nexport const createMeasurement = async (body: IMeasurement): Promise<null | IData<IMeasurement>> => {\r\n    try {\r\n        const token = getClientIdCache();\r\n\r\n        if (token === null) {\r\n            return null;\r\n        }\r\n\r\n        const res = await fetch(MEDIDAS_ROUTE, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const resData = await res.json();\r\n        return resData;\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        return null;\r\n    }\r\n};"],"mappings":"AAAA,SAASA,aAAa,QAAQ,UAAU;AACxC,SAASC,gBAAgB,QAAQ,kBAAkB;AAQnD;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,IAAkB,IAA0C;EAChG,IAAI;IACA,MAAMC,KAAK,GAAGH,gBAAgB,EAAE;IAEhC,IAAIG,KAAK,KAAK,IAAI,EAAE;MAChB,OAAO,IAAI;IACf;IAEA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,aAAa,EAAE;MACnCO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAEJ;MACrB,CAAC;MACDD,IAAI,EAAEM,IAAI,CAACC,SAAS,CAACP,IAAI;IAC7B,CAAC,CAAC;IAEF,MAAMQ,OAAO,GAAG,MAAMN,GAAG,CAACO,IAAI,EAAE;IAChC,OAAOD,OAAO;EAElB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO,IAAI;EACf;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}