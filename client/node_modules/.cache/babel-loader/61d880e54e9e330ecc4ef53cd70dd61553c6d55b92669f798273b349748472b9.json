{"ast":null,"code":"import { IMAGES_ROUTE } from \"../index\";\nimport { getClientIdCache } from \"../../cache/auth\";\n\n// Messages complete\nexport const uploadImage = async file => {\n  try {\n    const token = getClientIdCache();\n    if (token === null) {\n      return null;\n    }\n    const body = new FormData();\n    body.append(\"image\", file);\n    const res = await fetch(`${IMAGES_ROUTE}/upload`, {\n      method: \"POST\",\n      headers: {\n        Authorization: token\n      },\n      body\n    });\n    const data = await res.json();\n    if (data === null || data === undefined) {\n      return null;\n    }\n    const urlData = data.data;\n    const url = urlData.url;\n    if (url === undefined) return null;\n    return url;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};","map":{"version":3,"names":["IMAGES_ROUTE","getClientIdCache","uploadImage","file","token","body","FormData","append","res","fetch","method","headers","Authorization","data","json","undefined","urlData","url","error","console"],"sources":["C:/Users/danie/Documents/natgas/client/src/routes/images/images.routes.ts"],"sourcesContent":["import { IMAGES_ROUTE } from \"../index\";\r\nimport { getClientIdCache } from \"../../cache/auth\";\r\n\r\n// Messages complete\r\nexport const uploadImage =\r\n    async (file: File): Promise<null | string> => {\r\n        try {\r\n            const token = getClientIdCache();\r\n\r\n            if (token === null) {\r\n                return null;\r\n            }\r\n\r\n            const body = new FormData();\r\n            body.append(\"image\", file);\r\n\r\n            const res = await fetch(`${IMAGES_ROUTE}/upload`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: token,\r\n                },\r\n                body\r\n            });\r\n            const data: any = await res.json();\r\n\r\n            if (data === null || data === undefined) {\r\n                return null;\r\n            }\r\n\r\n            const urlData = data.data;\r\n            const url = urlData.url;\r\n            if (url === undefined) return null;\r\n\r\n            return url;\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    };\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,UAAU;AACvC,SAASC,gBAAgB,QAAQ,kBAAkB;;AAEnD;AACA,OAAO,MAAMC,WAAW,GACpB,MAAOC,IAAU,IAA6B;EAC1C,IAAI;IACA,MAAMC,KAAK,GAAGH,gBAAgB,EAAE;IAEhC,IAAIG,KAAK,KAAK,IAAI,EAAE;MAChB,OAAO,IAAI;IACf;IAEA,MAAMC,IAAI,GAAG,IAAIC,QAAQ,EAAE;IAC3BD,IAAI,CAACE,MAAM,CAAC,OAAO,EAAEJ,IAAI,CAAC;IAE1B,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAET,YAAa,SAAQ,EAAE;MAC9CU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACLC,aAAa,EAAER;MACnB,CAAC;MACDC;IACJ,CAAC,CAAC;IACF,MAAMQ,IAAS,GAAG,MAAML,GAAG,CAACM,IAAI,EAAE;IAElC,IAAID,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAKE,SAAS,EAAE;MACrC,OAAO,IAAI;IACf;IAEA,MAAMC,OAAO,GAAGH,IAAI,CAACA,IAAI;IACzB,MAAMI,GAAG,GAAGD,OAAO,CAACC,GAAG;IACvB,IAAIA,GAAG,KAAKF,SAAS,EAAE,OAAO,IAAI;IAElC,OAAOE,GAAG;EACd,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO,IAAI;EACf;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}