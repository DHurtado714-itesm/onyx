{"ast":null,"code":"import { PROGRESS_ROUTE } from \"../index\";\nimport { getClientIdCache } from '../../cache/auth';\nconst progressRoute = `${PROGRESS_ROUTE}`;\nexport const getAll = async () => {\n  try {\n    const token = getClientIdCache();\n    if (token === null) return null;\n    const res = await fetch(`${progressRoute}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": token\n      }\n    });\n    const data = await res.json();\n    if (data === null || data === undefined) {\n      return null;\n    }\n    return data;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};","map":{"version":3,"names":["PROGRESS_ROUTE","getClientIdCache","progressRoute","getAll","token","res","fetch","method","headers","data","json","undefined","error","console","log"],"sources":["C:/Users/danie/Documents/natgas/client/src/routes/progreso/progress.routes.ts"],"sourcesContent":["import { PROGRESS_ROUTE } from \"../index\";\r\nimport { getClientIdCache } from '../../cache/auth'\r\n\r\nconst progressRoute = `${PROGRESS_ROUTE}`;\r\n\r\nexport const getAll = async () => {\r\n    try {\r\n        const token = getClientIdCache();\r\n\r\n        if (token === null) return null;\r\n\r\n        const res = await fetch(`${progressRoute}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        });\r\n        \r\n        const data: any = await res.json();\r\n\r\n        if (data === null || data === undefined) {\r\n            return null;\r\n        }\r\n\r\n        return data;\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}"],"mappings":"AAAA,SAASA,cAAc,QAAQ,UAAU;AACzC,SAASC,gBAAgB,QAAQ,kBAAkB;AAEnD,MAAMC,aAAa,GAAI,GAAEF,cAAe,EAAC;AAEzC,OAAO,MAAMG,MAAM,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAI;IACA,MAAMC,KAAK,GAAGH,gBAAgB,EAAE;IAEhC,IAAIG,KAAK,KAAK,IAAI,EAAE,OAAO,IAAI;IAE/B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEJ,aAAc,EAAC,EAAE;MACxCK,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAEJ;MACrB;IACJ,CAAC,CAAC;IAEF,MAAMK,IAAS,GAAG,MAAMJ,GAAG,CAACK,IAAI,EAAE;IAElC,IAAID,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAKE,SAAS,EAAE;MACrC,OAAO,IAAI;IACf;IAEA,OAAOF,IAAI;EAEf,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAO,IAAI;EACf;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}