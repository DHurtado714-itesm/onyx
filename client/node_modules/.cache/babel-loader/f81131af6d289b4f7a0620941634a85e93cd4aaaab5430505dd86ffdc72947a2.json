{"ast":null,"code":"import { DIET_ROUTE } from '../index';\nimport { getClientIdCache } from '../../cache/auth';\nconst dietRoute = `${DIET_ROUTE}`;\n// Messages complete\n//router.get('/', getAll);\nexport const getAll = async (calories, ingredient) => {\n  try {\n    const token = getClientIdCache();\n    if (token === null) return null;\n    const res = await fetch(`${dietRoute}?calories=${calories}&ingredient=${ingredient}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": token\n      }\n    });\n    const data = await res.json();\n    if (data === null || data === undefined) {\n      return null;\n    }\n\n    // return data.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};\n\n// Messages complete\n//router.get('/favs', getAllFavs);\nexport const getAllFavs = async (calories, ingredient) => {\n  try {\n    const token = getClientIdCache();\n    if (token === null) return null;\n    const res = await fetch(`${dietRoute}/favs?calories=${calories}&ingredient=${ingredient}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": token\n      }\n    });\n    const data = await res.json();\n    if (data === null || data === undefined) {\n      return null;\n    }\n\n    // return data.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};\n\n// TODO: messages\n//router.get('/info', getDiet);\nexport const getDiet = async () => {\n  try {\n    const token = getClientIdCache();\n    if (token === null) return null;\n    const res = await fetch(dietRoute + '/info', {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": token\n      }\n    });\n    const data = await res.json();\n    if (data === null || data === undefined) {\n      return null;\n    }\n    return data.data;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};\n\n//router.get('/status', isAuth, setDietStatus);\nexport const setDietStatus = async (status, dietId) => {\n  try {\n    const token = getClientIdCache();\n    if (token === null) return null;\n    const res = await fetch(`${dietRoute}/status?status=${status}&dietId=${dietId}`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": token\n      }\n    });\n    return null;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};","map":{"version":3,"names":["DIET_ROUTE","getClientIdCache","dietRoute","getAll","calories","ingredient","token","res","fetch","method","headers","data","json","undefined","error","console","getAllFavs","getDiet","setDietStatus","status","dietId","log"],"sources":["C:/Users/danie/Documents/natgas/client/src/routes/diets/diet.routes.ts"],"sourcesContent":["import { DIET_ROUTE } from '../index';\r\nimport { IDiet } from '../../interfaces/Diet.interface';\r\nimport { IData } from '../routes.types';\r\nimport { getClientIdCache } from '../../cache/auth'\r\n\r\nconst dietRoute = `${DIET_ROUTE}`;\r\n\r\nexport interface IGetDietsData {\r\n    diets: IDiet[]\r\n}\r\n\r\n// Messages complete\r\n//router.get('/', getAll);\r\nexport const getAll = async (calories: string, ingredient: string): Promise<null | IData<any>> => {\r\n    try {\r\n        const token = getClientIdCache();\r\n\r\n        if (token === null) return null;\r\n\r\n        const res = await fetch(`${dietRoute}?calories=${calories}&ingredient=${ingredient}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        });\r\n        const data: any = await res.json();\r\n\r\n        if (data === null || data === undefined) {\r\n            return null;\r\n        }\r\n\r\n        // return data.data;\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return null;\r\n    }\r\n}\r\n\r\n// Messages complete\r\n//router.get('/favs', getAllFavs);\r\nexport const getAllFavs = async (calories: string, ingredient: string): Promise<null | IData<any>> => {\r\n    try {\r\n        const token = getClientIdCache();\r\n\r\n        if (token === null) return null;\r\n\r\n        const res = await fetch(`${dietRoute}/favs?calories=${calories}&ingredient=${ingredient}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        });\r\n        const data: any = await res.json();\r\n\r\n        if (data === null || data === undefined) {\r\n            return null;\r\n        }\r\n\r\n        // return data.data;\r\n        return data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return null;\r\n    }\r\n}\r\n\r\n// TODO: messages\r\n//router.get('/info', getDiet);\r\nexport const getDiet = async (): Promise<null | IGetDietsData> => {\r\n    try {\r\n        const token = getClientIdCache();\r\n\r\n        if (token === null) return null;\r\n\r\n        const res = await fetch(dietRoute + '/info', {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        });\r\n        const data: any = await res.json();\r\n\r\n        if (data === null || data === undefined) {\r\n            return null;\r\n        }\r\n\r\n        return data.data;\r\n    } catch (error) {\r\n        console.error(error);\r\n        return null;\r\n    }\r\n}\r\n\r\n//router.get('/status', isAuth, setDietStatus);\r\nexport const setDietStatus = async (status: boolean, dietId: string): Promise<null> => {\r\n    try {\r\n        const token = getClientIdCache();\r\n\r\n        if (token === null) return null;\r\n\r\n        const res = await fetch(`${dietRoute}/status?status=${status}&dietId=${dietId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token\r\n            }\r\n        });\r\n\r\n        return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}   \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}