{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Documents\\\\natgas\\\\client\\\\src\\\\components\\\\Messages\\\\Messages.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useEffect, useRef } from 'react';\nimport styles from './Messages.module.css';\nimport { MessagesContext } from '../../layouts/Messages/Messages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MILISECONDS_MSGS = 5000;\nconst CloseIcon = () => {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 384 512\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = CloseIcon;\nconst Message = _ref => {\n  _s();\n  let {\n    msg,\n    resolveMsgOk\n  } = _ref;\n  const putTimeOut = useRef(false);\n  const time = () => {\n    const t = setTimeout(() => {\n      resolveMsgOk(msg, false);\n      clearTimeout(t);\n    }, MILISECONDS_MSGS);\n  };\n  useEffect(() => {\n    if (putTimeOut.current) return;\n    putTimeOut.current = true;\n    if (msg.isOkCancel) return;\n    time();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.msg} ${styles[msg.type]} ${!msg.isOkCancel && styles.counter}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.msg_top,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.msg_top_text,\n        children: msg.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        title: \"Cerrar mensaje\",\n        onClick: () => {\n          resolveMsgOk(msg, false);\n        },\n        className: styles.msg_top_icon,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), msg.isOkCancel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.msg_async,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.msg_async_cancel,\n        onClick: () => {\n          resolveMsgOk(msg, false);\n        },\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.msg_async_ok,\n        onClick: () => {\n          resolveMsgOk(msg, true);\n        },\n        children: \"Ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Message, \"5Uhe8F3S3J1mJRJnrrK7eZHgEVo=\");\n_c2 = Message;\nconst MessagesModal = () => {\n  _s2();\n  const {\n    modalMsgs,\n    waitForPressResolveArray,\n    setModalMsgs,\n    hashSetSeedsMsgs\n  } = useContext(MessagesContext);\n  const removeOurselves = (prev, msg) => {\n    const aux = [];\n    for (let i = 0; i < prev.length; i++) {\n      if (prev[i].id !== msg.id) {\n        aux.push(prev[i]);\n      }\n    }\n    return aux;\n  };\n  const remove = msg => {\n    setModalMsgs(prev => removeOurselves(prev, msg));\n  };\n  const resolveMsgOk = (msg, isOk) => {\n    // eslint-disable-next-line\n    if (waitForPressResolveArray.current[msg.id]) {\n      waitForPressResolveArray.current[msg.id](isOk);\n    }\n    // We delete that resolver\n    // In this case it will not cause bugs, because this keys are random numbers\n    // eslint-disable-next-line\n    delete waitForPressResolveArray.current[msg.id];\n    hashSetSeedsMsgs.current.delete(msg.text);\n    remove(msg);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.msgs,\n    children: modalMsgs.map((msg, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          resolveMsgOk: resolveMsgOk,\n          msg: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n_s2(MessagesModal, \"D7/3T+x/Jz4/JPUAXFlxp2JoMuY=\");\n_c3 = MessagesModal;\nexport default MessagesModal;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CloseIcon\");\n$RefreshReg$(_c2, \"Message\");\n$RefreshReg$(_c3, \"MessagesModal\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","styles","MessagesContext","jsxDEV","_jsxDEV","MILISECONDS_MSGS","CloseIcon","xmlns","viewBox","children","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","Message","_ref","_s","msg","resolveMsgOk","putTimeOut","time","t","setTimeout","clearTimeout","current","isOkCancel","className","type","counter","msg_top","msg_top_text","text","title","onClick","msg_top_icon","msg_async","msg_async_cancel","msg_async_ok","_c2","MessagesModal","_s2","modalMsgs","waitForPressResolveArray","setModalMsgs","hashSetSeedsMsgs","removeOurselves","prev","aux","i","length","id","push","remove","isOk","delete","msgs","map","index","Fragment","_c3","$RefreshReg$"],"sources":["C:/Users/danie/Documents/natgas/client/src/components/Messages/Messages.tsx"],"sourcesContent":["import React, { useContext, useEffect, useRef } from 'react';\r\nimport styles from './Messages.module.css';\r\nimport { MESSAGE_MODAL } from './Messages.types';\r\nimport { MessagesContext } from '../../layouts/Messages/Messages';\r\n\r\nconst MILISECONDS_MSGS = 5000;\r\n\r\nconst CloseIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\">\r\n            <path d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\ninterface Props {\r\n    msg: MESSAGE_MODAL;\r\n    resolveMsgOk: (msg: MESSAGE_MODAL, isOk: boolean) => void;\r\n}\r\n\r\nconst Message: React.FunctionComponent<Props> = ({ msg, resolveMsgOk }) => {\r\n    const putTimeOut = useRef<boolean>(false);\r\n\r\n    const time = (): void => {\r\n        const t: NodeJS.Timeout = setTimeout(() => {\r\n            resolveMsgOk(msg, false);\r\n            clearTimeout(t);\r\n        }, MILISECONDS_MSGS);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (putTimeOut.current) return;\r\n        putTimeOut.current = true;\r\n        if (msg.isOkCancel) return;\r\n        time();\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            className={`${styles.msg} ${styles[msg.type]} ${!msg.isOkCancel && styles.counter\r\n                }`}\r\n        >\r\n            <div className={styles.msg_top}>\r\n                <div className={styles.msg_top_text}>{msg.text}</div>\r\n                <button\r\n                    title=\"Cerrar mensaje\"\r\n                    onClick={() => {\r\n                        resolveMsgOk(msg, false);\r\n                    }}\r\n                    className={styles.msg_top_icon}\r\n                >\r\n                    <CloseIcon />\r\n                </button>\r\n            </div>\r\n            {msg.isOkCancel && (\r\n                <div className={styles.msg_async}>\r\n                    <button\r\n                        className={styles.msg_async_cancel}\r\n                        onClick={() => {\r\n                            resolveMsgOk(msg, false);\r\n                        }}\r\n                    >\r\n                        Cancelar\r\n                    </button>\r\n                    <button\r\n                        className={styles.msg_async_ok}\r\n                        onClick={() => {\r\n                            resolveMsgOk(msg, true);\r\n                        }}\r\n                    >\r\n                        Ok\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MessagesModal: React.FunctionComponent = () => {\r\n    const {\r\n        modalMsgs,\r\n        waitForPressResolveArray,\r\n        setModalMsgs,\r\n        hashSetSeedsMsgs,\r\n    } = useContext(MessagesContext);\r\n\r\n    const removeOurselves = (\r\n        prev: MESSAGE_MODAL[],\r\n        msg: MESSAGE_MODAL\r\n    ): MESSAGE_MODAL[] => {\r\n        const aux: MESSAGE_MODAL[] = [];\r\n\r\n        for (let i = 0; i < prev.length; i++) {\r\n            if (prev[i].id !== msg.id) {\r\n                aux.push(prev[i]);\r\n            }\r\n        }\r\n\r\n        return aux;\r\n    };\r\n\r\n    const remove = (msg: MESSAGE_MODAL): void => {\r\n        setModalMsgs((prev) => removeOurselves(prev, msg));\r\n    };\r\n\r\n    const resolveMsgOk = (msg: MESSAGE_MODAL, isOk: boolean): void => {\r\n        // eslint-disable-next-line\r\n        if (waitForPressResolveArray.current[msg.id]) {\r\n            waitForPressResolveArray.current[msg.id](isOk);\r\n        }\r\n        // We delete that resolver\r\n        // In this case it will not cause bugs, because this keys are random numbers\r\n        // eslint-disable-next-line\r\n        delete waitForPressResolveArray.current[msg.id];\r\n        hashSetSeedsMsgs.current.delete(msg.text);\r\n        remove(msg);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.msgs}>\r\n            {modalMsgs.map((msg: MESSAGE_MODAL, index: number) => {\r\n                return (\r\n                    <React.Fragment key={index}>\r\n                        <Message resolveMsgOk={resolveMsgOk} msg={msg} />\r\n                    </React.Fragment>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MessagesModal;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC5D,OAAOC,MAAM,MAAM,uBAAuB;AAE1C,SAASC,eAAe,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,gBAAgB,GAAG,IAAI;AAE7B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACpB,oBACIF,OAAA;IAAKG,KAAK,EAAC,4BAA4B;IAACC,OAAO,EAAC,aAAa;IAAAC,QAAA,eACzDL,OAAA;MAAMM,CAAC,EAAC;IAAyR;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClS;AAEd,CAAC;AAAAC,EAAA,GANKT,SAAS;AAaf,MAAMU,OAAuC,GAAGC,IAAA,IAA2B;EAAAC,EAAA;EAAA,IAA1B;IAAEC,GAAG;IAAEC;EAAa,CAAC,GAAAH,IAAA;EAClE,MAAMI,UAAU,GAAGrB,MAAM,CAAU,KAAK,CAAC;EAEzC,MAAMsB,IAAI,GAAGA,CAAA,KAAY;IACrB,MAAMC,CAAiB,GAAGC,UAAU,CAAC,MAAM;MACvCJ,YAAY,CAACD,GAAG,EAAE,KAAK,CAAC;MACxBM,YAAY,CAACF,CAAC,CAAC;IACnB,CAAC,EAAElB,gBAAgB,CAAC;EACxB,CAAC;EAEDN,SAAS,CAAC,MAAM;IACZ,IAAIsB,UAAU,CAACK,OAAO,EAAE;IACxBL,UAAU,CAACK,OAAO,GAAG,IAAI;IACzB,IAAIP,GAAG,CAACQ,UAAU,EAAE;IACpBL,IAAI,EAAE;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIlB,OAAA;IACIwB,SAAS,EAAG,GAAE3B,MAAM,CAACkB,GAAI,IAAGlB,MAAM,CAACkB,GAAG,CAACU,IAAI,CAAE,IAAG,CAACV,GAAG,CAACQ,UAAU,IAAI1B,MAAM,CAAC6B,OACrE,EAAE;IAAArB,QAAA,gBAEPL,OAAA;MAAKwB,SAAS,EAAE3B,MAAM,CAAC8B,OAAQ;MAAAtB,QAAA,gBAC3BL,OAAA;QAAKwB,SAAS,EAAE3B,MAAM,CAAC+B,YAAa;QAAAvB,QAAA,EAAEU,GAAG,CAACc;MAAI;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eACrDV,OAAA;QACI8B,KAAK,EAAC,gBAAgB;QACtBC,OAAO,EAAEA,CAAA,KAAM;UACXf,YAAY,CAACD,GAAG,EAAE,KAAK,CAAC;QAC5B,CAAE;QACFS,SAAS,EAAE3B,MAAM,CAACmC,YAAa;QAAA3B,QAAA,eAE/BL,OAAA,CAACE,SAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACP,EACLK,GAAG,CAACQ,UAAU,iBACXvB,OAAA;MAAKwB,SAAS,EAAE3B,MAAM,CAACoC,SAAU;MAAA5B,QAAA,gBAC7BL,OAAA;QACIwB,SAAS,EAAE3B,MAAM,CAACqC,gBAAiB;QACnCH,OAAO,EAAEA,CAAA,KAAM;UACXf,YAAY,CAACD,GAAG,EAAE,KAAK,CAAC;QAC5B,CAAE;QAAAV,QAAA,EACL;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACTV,OAAA;QACIwB,SAAS,EAAE3B,MAAM,CAACsC,YAAa;QAC/BJ,OAAO,EAAEA,CAAA,KAAM;UACXf,YAAY,CAACD,GAAG,EAAE,IAAI,CAAC;QAC3B,CAAE;QAAAV,QAAA,EACL;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEhB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd,CAAC;AAACI,EAAA,CAxDIF,OAAuC;AAAAwB,GAAA,GAAvCxB,OAAuC;AA0D7C,MAAMyB,aAAsC,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACjD,MAAM;IACFC,SAAS;IACTC,wBAAwB;IACxBC,YAAY;IACZC;EACJ,CAAC,GAAGhD,UAAU,CAACI,eAAe,CAAC;EAE/B,MAAM6C,eAAe,GAAGA,CACpBC,IAAqB,EACrB7B,GAAkB,KACA;IAClB,MAAM8B,GAAoB,GAAG,EAAE;IAE/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MAClC,IAAIF,IAAI,CAACE,CAAC,CAAC,CAACE,EAAE,KAAKjC,GAAG,CAACiC,EAAE,EAAE;QACvBH,GAAG,CAACI,IAAI,CAACL,IAAI,CAACE,CAAC,CAAC,CAAC;MACrB;IACJ;IAEA,OAAOD,GAAG;EACd,CAAC;EAED,MAAMK,MAAM,GAAInC,GAAkB,IAAW;IACzC0B,YAAY,CAAEG,IAAI,IAAKD,eAAe,CAACC,IAAI,EAAE7B,GAAG,CAAC,CAAC;EACtD,CAAC;EAED,MAAMC,YAAY,GAAGA,CAACD,GAAkB,EAAEoC,IAAa,KAAW;IAC9D;IACA,IAAIX,wBAAwB,CAAClB,OAAO,CAACP,GAAG,CAACiC,EAAE,CAAC,EAAE;MAC1CR,wBAAwB,CAAClB,OAAO,CAACP,GAAG,CAACiC,EAAE,CAAC,CAACG,IAAI,CAAC;IAClD;IACA;IACA;IACA;IACA,OAAOX,wBAAwB,CAAClB,OAAO,CAACP,GAAG,CAACiC,EAAE,CAAC;IAC/CN,gBAAgB,CAACpB,OAAO,CAAC8B,MAAM,CAACrC,GAAG,CAACc,IAAI,CAAC;IACzCqB,MAAM,CAACnC,GAAG,CAAC;EACf,CAAC;EAED,oBACIf,OAAA;IAAKwB,SAAS,EAAE3B,MAAM,CAACwD,IAAK;IAAAhD,QAAA,EACvBkC,SAAS,CAACe,GAAG,CAAC,CAACvC,GAAkB,EAAEwC,KAAa,KAAK;MAClD,oBACIvD,OAAA,CAACP,KAAK,CAAC+D,QAAQ;QAAAnD,QAAA,eACXL,OAAA,CAACY,OAAO;UAACI,YAAY,EAAEA,YAAa;UAACD,GAAG,EAAEA;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG,GADhC6C,KAAK;QAAAhD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAET;IAEzB,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd,CAAC;AAAC4B,GAAA,CAnDID,aAAsC;AAAAoB,GAAA,GAAtCpB,aAAsC;AAqD5C,eAAeA,aAAa;AAAC,IAAA1B,EAAA,EAAAyB,GAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAA/C,EAAA;AAAA+C,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}