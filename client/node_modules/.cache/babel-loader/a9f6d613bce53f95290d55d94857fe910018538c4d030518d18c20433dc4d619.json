{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Documents\\\\natgas\\\\client\\\\src\\\\pages\\\\Workouts\\\\Workouts.tsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect, useRef, useState, useContext } from \"react\";\nimport Layout from \"../../layouts/Dashboard/Dashboard\";\nimport WorkoutFav from \"./WorkoutFav/Workout\";\nimport WorkoutNoFav from \"./WorkoutNoFav/Workout\";\nimport Dropdown from \"../../components/Dropdown/Dropdown\";\nimport Skeleton from \"./Skeleton/Skeleton\";\nimport { getAllWorkouts, getFavWorkouts, likeUnlikeWorkout } from \"../../routes/workouts/workouts.routes\";\nimport { MessagesContext } from \"../../layouts/Messages/Messages\";\nimport { AppContext } from \"../../App\";\nimport styles from \"./Workouts.module.css\";\nimport CreateWorkout from \"./Create/Create\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Workouts() {\n  _s();\n  const {\n    addStaticMsg\n  } = useContext(MessagesContext);\n  const {\n    user\n  } = useContext(AppContext);\n  const controllerWorkout = useRef(false);\n  const [favWorkouts, setFavWorkouts] = useState([]);\n  const [allWorkouts, setAllWorkouts] = useState([]);\n  const [isLoadingFavs, setIsLoadingFavs] = useState(true);\n  const [isLoadingAll, setIsLoadingAll] = useState(true);\n  const [isOpenCreateWorkout, setIsOpenCreateWorkout] = useState(false);\n  const [isOpenFrequency, setIsOpenFrequency] = useState(false);\n  const [isOpenLevel, setIsOpenLevel] = useState(false);\n  const [isOpenType, setIsOpenType] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [optionFrequency, setOptionFrequency] = useState(\"Cualquiera\");\n  const [optionLevel, setOptionLevel] = useState(\"Cualquiera\");\n  const [optionType, setOptionType] = useState(\"Cualquiera\");\n  const getFavWorkoutsController = () => {\n    const doFetch = async () => {\n      setIsLoadingFavs(true);\n      const resData = await getFavWorkouts();\n\n      // Mostrar mensaje en pantalla si hubo un error\n      if (resData === null) {\n        addStaticMsg(\"Error al obtener las rutinas favoritas\", \"danger\");\n        return;\n      }\n      if (resData.msg !== \"\") {\n        addStaticMsg(resData.msg, \"danger\");\n        return;\n      }\n      const data = resData.data;\n      setIsLoadingFavs(false);\n      if (data === null) return;\n      setFavWorkouts(data.workouts);\n    };\n    void doFetch();\n  };\n  const getAllWorkoutsController = () => {\n    const doFetch = async () => {\n      setIsLoadingAll(true);\n      let query = \"\";\n      if (search.trim() !== \"\") {\n        query += \"search=\" + search;\n      }\n      if (optionFrequency !== \"Cualquiera\") {\n        query += \"frequency=\" + optionFrequency;\n      }\n      if (optionLevel !== \"Cualquiera\") {\n        query += \"level=\" + optionLevel;\n      }\n      if (optionType !== \"Cualquiera\") {\n        query += \"type=\" + optionType;\n      }\n      const resData = await getAllWorkouts(query);\n      if (resData === null) {\n        addStaticMsg(\"Error al obtener las rutinas\", \"danger\");\n        return;\n      }\n      if (resData.msg !== \"\") {\n        addStaticMsg(resData.msg, \"danger\");\n        return;\n      }\n      const data = resData.data;\n      setIsLoadingAll(false);\n      if (data === null) return;\n      setAllWorkouts(data.workouts);\n    };\n    void doFetch();\n  };\n  const like = workoutId => {\n    const doFetch = async () => {\n      const resData = await likeUnlikeWorkout(workoutId);\n      if (resData === null) {\n        addStaticMsg(\"Error al darle like a una rutina\", \"danger\");\n        return;\n      }\n      if (resData.msg !== \"\") {\n        addStaticMsg(resData.msg, \"danger\");\n        return;\n      }\n      getAllWorkoutsController();\n      getFavWorkoutsController();\n    };\n    void doFetch();\n  };\n  useEffect(() => {\n    getAllWorkoutsController();\n  }, [optionFrequency, optionLevel, optionType]);\n  useEffect(() => {\n    if (search.trim() !== \"\") return;\n    getAllWorkoutsController();\n  }, [search]);\n  useEffect(() => {\n    if (controllerWorkout.current) return;\n    controllerWorkout.current = true;\n    getFavWorkoutsController();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [(user === null || user === void 0 ? void 0 : user.role) === \"Administrador\" && /*#__PURE__*/_jsxDEV(CreateWorkout, {\n      isOpen: isOpenCreateWorkout,\n      setIsOpen: setIsOpenCreateWorkout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.workouts_fav,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.wrapper,\n          children: [(user === null || user === void 0 ? void 0 : user.role) === \"Administrador\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setIsOpenCreateWorkout(true);\n            },\n            children: \"A\\xF1adir workout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.workouts_container,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Workouts Favoritos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), isLoadingFavs ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${styles.loader} ${isLoadingFavs && styles.loader_open}`,\n              children: /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.workouts_container_wrapper,\n              children: favWorkouts.map((workout, index) => {\n                if (!workout.liked) return /*#__PURE__*/_jsxDEV(Fragment, {}, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 45\n                }, this);\n                return /*#__PURE__*/_jsxDEV(Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(WorkoutFav, {\n                    like: like,\n                    isLiked: workout.liked,\n                    workout: workout\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 49\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.workouts_container,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Buscar Otros Workouts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.workouts_search,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.workouts_search_wrapper,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    value: search,\n                    onChange: e => {\n                      setSearch(e.target.value);\n                    },\n                    type: \"text\",\n                    placeholder: \"Buscar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 37\n                }, this), search.trim() !== \"\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: getAllWorkoutsController,\n                  children: \"Buscar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.workouts_search_selects,\n                children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n                  text: \"Frecuencia\",\n                  isOpen: isOpenFrequency,\n                  setIsOpen: setIsOpenFrequency,\n                  classDivChild: styles.child,\n                  classBtn: styles.btn,\n                  children: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"Cualquiera\"].map(freq => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      onClick: () => {\n                        setOptionFrequency(freq);\n                        setIsOpenFrequency(false);\n                      },\n                      className: `${optionFrequency === freq && styles.active}`,\n                      children: freq\n                    }, freq, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 49\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                  text: \"Nivel\",\n                  isOpen: isOpenLevel,\n                  setIsOpen: setIsOpenLevel,\n                  classDivChild: styles.child,\n                  classBtn: styles.btn,\n                  children: [\"Principiante\", \"Intermedio\", \"Avanzado\", \"Cualquiera\"].map(level => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      onClick: () => {\n                        setOptionLevel(level);\n                        setIsOpenLevel(false);\n                      },\n                      className: `${optionLevel === level && styles.active}`,\n                      children: level\n                    }, level, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 49\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                  text: \"Tipo\",\n                  isOpen: isOpenType,\n                  setIsOpen: setIsOpenType,\n                  classDivChild: styles.child,\n                  classBtn: styles.btn,\n                  children: [\"Fuerza\", \"Hipertrofia\", \"Híbrido\", \"Cualquiera\"].map(typeW => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      onClick: () => {\n                        setOptionType(typeW);\n                        setIsOpenType(false);\n                      },\n                      className: `${optionType === typeW && styles.active}`,\n                      children: typeW\n                    }, typeW, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 49\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), isLoadingAll ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.workouts_container_wrapper,\n              children: allWorkouts.map((workout, index) => {\n                return /*#__PURE__*/_jsxDEV(Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(WorkoutNoFav, {\n                    like: like,\n                    isLiked: workout.liked,\n                    workout: workout\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 49\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Workouts, \"Hp/3rllgZUmgf0OaqnL6GdRf4IA=\");\n_c = Workouts;\nexport default Workouts;\nvar _c;\n$RefreshReg$(_c, \"Workouts\");","map":{"version":3,"names":["Fragment","useEffect","useRef","useState","useContext","Layout","WorkoutFav","WorkoutNoFav","Dropdown","Skeleton","getAllWorkouts","getFavWorkouts","likeUnlikeWorkout","MessagesContext","AppContext","styles","CreateWorkout","jsxDEV","_jsxDEV","_Fragment","Workouts","_s","addStaticMsg","user","controllerWorkout","favWorkouts","setFavWorkouts","allWorkouts","setAllWorkouts","isLoadingFavs","setIsLoadingFavs","isLoadingAll","setIsLoadingAll","isOpenCreateWorkout","setIsOpenCreateWorkout","isOpenFrequency","setIsOpenFrequency","isOpenLevel","setIsOpenLevel","isOpenType","setIsOpenType","search","setSearch","optionFrequency","setOptionFrequency","optionLevel","setOptionLevel","optionType","setOptionType","getFavWorkoutsController","doFetch","resData","msg","data","workouts","getAllWorkoutsController","query","trim","like","workoutId","current","children","role","isOpen","setIsOpen","fileName","_jsxFileName","lineNumber","columnNumber","className","workouts_fav","wrapper","onClick","workouts_container","loader","loader_open","workouts_container_wrapper","map","workout","index","liked","isLiked","workouts_search","workouts_search_wrapper","value","onChange","e","target","type","placeholder","workouts_search_selects","text","classDivChild","child","classBtn","btn","freq","active","level","typeW","_c","$RefreshReg$"],"sources":["C:/Users/danie/Documents/natgas/client/src/pages/Workouts/Workouts.tsx"],"sourcesContent":["import { Fragment, useEffect, useRef, useState, useContext } from \"react\";\r\nimport Layout from \"../../layouts/Dashboard/Dashboard\";\r\nimport WorkoutFav from \"./WorkoutFav/Workout\";\r\nimport WorkoutNoFav from \"./WorkoutNoFav/Workout\";\r\nimport Dropdown from \"../../components/Dropdown/Dropdown\";\r\nimport Skeleton from \"./Skeleton/Skeleton\";\r\nimport { getAllWorkouts, getFavWorkouts, likeUnlikeWorkout } from \"../../routes/workouts/workouts.routes\";\r\nimport { IWorkout } from \"../../interfaces/Workout.interfaces\";\r\nimport { MessagesContext } from \"../../layouts/Messages/Messages\";\r\nimport { AppContext } from \"../../App\";\r\nimport styles from \"./Workouts.module.css\";\r\nimport CreateWorkout from \"./Create/Create\";\r\n\r\nfunction Workouts() {\r\n    const { addStaticMsg } = useContext(MessagesContext);\r\n    const { user } = useContext(AppContext);\r\n    const controllerWorkout = useRef<boolean>(false);\r\n    const [favWorkouts, setFavWorkouts] = useState<IWorkout[]>([]);\r\n    const [allWorkouts, setAllWorkouts] = useState<IWorkout[]>([]);\r\n    const [isLoadingFavs, setIsLoadingFavs] = useState<boolean>(true);\r\n    const [isLoadingAll, setIsLoadingAll] = useState<boolean>(true);\r\n\r\n    const [isOpenCreateWorkout, setIsOpenCreateWorkout] = useState<boolean>(false);\r\n\r\n    const [isOpenFrequency, setIsOpenFrequency] = useState<boolean>(false);\r\n    const [isOpenLevel, setIsOpenLevel] = useState<boolean>(false);\r\n    const [isOpenType, setIsOpenType] = useState<boolean>(false);\r\n\r\n    const [search, setSearch] = useState<string>(\"\");\r\n    const [optionFrequency, setOptionFrequency] = useState<\"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"Cualquiera\">(\"Cualquiera\");\r\n    const [optionLevel, setOptionLevel] = useState<\"Principiante\" | \"Intermedio\" | \"Avanzado\" | \"Cualquiera\">(\"Cualquiera\");\r\n    const [optionType, setOptionType] = useState<\"Fuerza\" | \"Hipertrofia\" | \"Híbrido\" | \"Cualquiera\">(\"Cualquiera\");\r\n\r\n    const getFavWorkoutsController = (): void => {\r\n        const doFetch = async (): Promise<void> => {\r\n            setIsLoadingFavs(true);\r\n            const resData = await getFavWorkouts();\r\n\r\n            // Mostrar mensaje en pantalla si hubo un error\r\n            if (resData === null) {\r\n                addStaticMsg(\"Error al obtener las rutinas favoritas\", \"danger\");\r\n                return;\r\n            }\r\n\r\n            if (resData.msg !== \"\") {\r\n                addStaticMsg(resData.msg, \"danger\");\r\n                return;\r\n            }\r\n\r\n            const data = resData.data;\r\n\r\n            setIsLoadingFavs(false);\r\n\r\n            if (data === null) return;\r\n\r\n            setFavWorkouts(data.workouts);\r\n        };\r\n        void doFetch();\r\n    }\r\n\r\n    const getAllWorkoutsController = (): void => {\r\n        const doFetch = async (): Promise<void> => {\r\n            setIsLoadingAll(true);\r\n            let query = \"\";\r\n\r\n            if (search.trim() !== \"\") {\r\n                query += \"search=\" + search;\r\n            }\r\n            if (optionFrequency !== \"Cualquiera\") {\r\n                query += \"frequency=\" + optionFrequency;\r\n            }\r\n            if (optionLevel !== \"Cualquiera\") {\r\n                query += \"level=\" + optionLevel;\r\n            }\r\n            if (optionType !== \"Cualquiera\") {\r\n                query += \"type=\" + optionType;\r\n            }\r\n\r\n            const resData = await getAllWorkouts(query);\r\n\r\n            if (resData === null) {\r\n                addStaticMsg(\"Error al obtener las rutinas\", \"danger\");\r\n                return;\r\n            }\r\n\r\n            if (resData.msg !== \"\") {\r\n                addStaticMsg(resData.msg, \"danger\");\r\n                return;\r\n            }\r\n\r\n            const data = resData.data;\r\n\r\n            setIsLoadingAll(false);\r\n\r\n            if (data === null) return;\r\n\r\n            setAllWorkouts(data.workouts);\r\n        };\r\n        void doFetch();\r\n    }\r\n\r\n    const like = (workoutId: string) => {\r\n        const doFetch = async (): Promise<void> => {\r\n            const resData = await likeUnlikeWorkout(workoutId);\r\n            if (resData === null) {\r\n                addStaticMsg(\"Error al darle like a una rutina\", \"danger\");\r\n                return;\r\n            }\r\n\r\n            if (resData.msg !== \"\") {\r\n                addStaticMsg(resData.msg, \"danger\");\r\n                return;\r\n            }\r\n            getAllWorkoutsController();\r\n            getFavWorkoutsController();\r\n        };\r\n        void doFetch()\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllWorkoutsController();\r\n    }, [optionFrequency, optionLevel, optionType]);\r\n\r\n    useEffect(() => {\r\n        if (search.trim() !== \"\") return;\r\n        getAllWorkoutsController();\r\n    }, [search]);\r\n\r\n    useEffect(() => {\r\n        if (controllerWorkout.current) return;\r\n        controllerWorkout.current = true;\r\n\r\n        getFavWorkoutsController();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {user?.role === \"Administrador\" && (\r\n                <CreateWorkout isOpen={isOpenCreateWorkout} setIsOpen={setIsOpenCreateWorkout} />\r\n            )}\r\n            <Layout>\r\n                <div className={styles.workouts_fav}>\r\n                    <div className={styles.wrapper}>\r\n                        {user?.role === \"Administrador\" && (\r\n                            <div onClick={() => {\r\n                                setIsOpenCreateWorkout(true);\r\n                            }}>\r\n                                Añadir workout\r\n                            </div>\r\n                        )}\r\n                        <div className={styles.workouts_container}>\r\n                            <h2>\r\n                                Workouts Favoritos\r\n                            </h2>\r\n                            {isLoadingFavs ? (\r\n                                <div className={`${styles.loader} ${isLoadingFavs && styles.loader_open}`}>\r\n                                    <Skeleton />\r\n                                </div>\r\n                            ) : (\r\n                                <div className={styles.workouts_container_wrapper}>\r\n                                    {favWorkouts.map((workout: IWorkout, index: number) => {\r\n                                        if (!workout.liked) return (\r\n                                            <Fragment key={index}></Fragment>\r\n                                        )\r\n                                        return (\r\n                                            <Fragment key={index}>\r\n                                                <WorkoutFav like={like} isLiked={workout.liked} workout={workout} />\r\n                                            </Fragment>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div className={styles.workouts_container}>\r\n                            <h2>\r\n                                Buscar Otros Workouts\r\n                            </h2>\r\n                            <div className={styles.workouts_search}>\r\n                                <div className={styles.workouts_search_wrapper}>\r\n                                    <label>\r\n                                        <input value={search} onChange={(e) => {\r\n                                            setSearch(e.target.value);\r\n                                        }} type=\"text\" placeholder=\"Buscar\" />\r\n                                    </label>\r\n                                    {search.trim() !== \"\" && (\r\n                                        <button onClick={getAllWorkoutsController}>\r\n                                            Buscar\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                                <div className={styles.workouts_search_selects}>\r\n                                    <Dropdown\r\n                                        text=\"Frecuencia\"\r\n                                        isOpen={isOpenFrequency}\r\n                                        setIsOpen={setIsOpenFrequency}\r\n                                        classDivChild={styles.child}\r\n                                        classBtn={styles.btn}\r\n                                    >\r\n                                        {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"Cualquiera\"].map((freq: string) => {\r\n                                            return (\r\n                                                <div key={freq} onClick={() => {\r\n                                                    setOptionFrequency(freq as any);\r\n                                                    setIsOpenFrequency(false);\r\n                                                }} className={`${optionFrequency === freq && styles.active}`}>{freq}</div>\r\n                                            )\r\n                                        })}\r\n                                    </Dropdown>\r\n                                    <Dropdown\r\n                                        text=\"Nivel\"\r\n                                        isOpen={isOpenLevel}\r\n                                        setIsOpen={setIsOpenLevel}\r\n                                        classDivChild={styles.child}\r\n                                        classBtn={styles.btn}\r\n                                    >\r\n                                        {[\"Principiante\", \"Intermedio\", \"Avanzado\", \"Cualquiera\"].map((level: string) => {\r\n                                            return (\r\n                                                <div key={level} onClick={() => {\r\n                                                    setOptionLevel(level as any);\r\n                                                    setIsOpenLevel(false);\r\n                                                }} className={`${optionLevel === level && styles.active}`}>{level}</div>\r\n                                            )\r\n                                        })}\r\n                                    </Dropdown>\r\n                                    <Dropdown\r\n                                        text=\"Tipo\"\r\n                                        isOpen={isOpenType}\r\n                                        setIsOpen={setIsOpenType}\r\n                                        classDivChild={styles.child}\r\n                                        classBtn={styles.btn}\r\n                                    >\r\n                                        {[\"Fuerza\", \"Hipertrofia\", \"Híbrido\", \"Cualquiera\"].map((typeW: string) => {\r\n                                            return (\r\n                                                <div key={typeW} onClick={() => {\r\n                                                    setOptionType(typeW as any);\r\n                                                    setIsOpenType(false);\r\n                                                }} className={`${optionType === typeW && styles.active}`}>{typeW}</div>\r\n                                            )\r\n                                        })}\r\n                                    </Dropdown>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {isLoadingAll ? (\r\n                                <Skeleton />\r\n                            ) : (\r\n                                <div className={styles.workouts_container_wrapper}>\r\n                                    {allWorkouts.map((workout: IWorkout, index: number) => {\r\n                                        return (\r\n                                            <Fragment key={index}>\r\n                                                <WorkoutNoFav like={like} isLiked={workout.liked} workout={workout} />\r\n                                            </Fragment>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Workouts;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACzE,OAAOC,MAAM,MAAM,mCAAmC;AACtD,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,cAAc,EAAEC,cAAc,EAAEC,iBAAiB,QAAQ,uCAAuC;AAEzG,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,UAAU,QAAQ,WAAW;AACtC,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAlB,QAAA,IAAAmB,SAAA;AAE5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAa,CAAC,GAAGlB,UAAU,CAACS,eAAe,CAAC;EACpD,MAAM;IAAEU;EAAK,CAAC,GAAGnB,UAAU,CAACU,UAAU,CAAC;EACvC,MAAMU,iBAAiB,GAAGtB,MAAM,CAAU,KAAK,CAAC;EAChD,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAa,EAAE,CAAC;EAC9D,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAa,EAAE,CAAC;EAC9D,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAU,IAAI,CAAC;EACjE,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAU,IAAI,CAAC;EAE/D,MAAM,CAAC8B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG/B,QAAQ,CAAU,KAAK,CAAC;EAE9E,MAAM,CAACgC,eAAe,EAAEC,kBAAkB,CAAC,GAAGjC,QAAQ,CAAU,KAAK,CAAC;EACtE,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAU,KAAK,CAAC;EAC9D,MAAM,CAACoC,UAAU,EAAEC,aAAa,CAAC,GAAGrC,QAAQ,CAAU,KAAK,CAAC;EAE5D,MAAM,CAACsC,MAAM,EAAEC,SAAS,CAAC,GAAGvC,QAAQ,CAAS,EAAE,CAAC;EAChD,MAAM,CAACwC,eAAe,EAAEC,kBAAkB,CAAC,GAAGzC,QAAQ,CAAmD,YAAY,CAAC;EACtH,MAAM,CAAC0C,WAAW,EAAEC,cAAc,CAAC,GAAG3C,QAAQ,CAA4D,YAAY,CAAC;EACvH,MAAM,CAAC4C,UAAU,EAAEC,aAAa,CAAC,GAAG7C,QAAQ,CAAsD,YAAY,CAAC;EAE/G,MAAM8C,wBAAwB,GAAGA,CAAA,KAAY;IACzC,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAA2B;MACvCpB,gBAAgB,CAAC,IAAI,CAAC;MACtB,MAAMqB,OAAO,GAAG,MAAMxC,cAAc,EAAE;;MAEtC;MACA,IAAIwC,OAAO,KAAK,IAAI,EAAE;QAClB7B,YAAY,CAAC,wCAAwC,EAAE,QAAQ,CAAC;QAChE;MACJ;MAEA,IAAI6B,OAAO,CAACC,GAAG,KAAK,EAAE,EAAE;QACpB9B,YAAY,CAAC6B,OAAO,CAACC,GAAG,EAAE,QAAQ,CAAC;QACnC;MACJ;MAEA,MAAMC,IAAI,GAAGF,OAAO,CAACE,IAAI;MAEzBvB,gBAAgB,CAAC,KAAK,CAAC;MAEvB,IAAIuB,IAAI,KAAK,IAAI,EAAE;MAEnB3B,cAAc,CAAC2B,IAAI,CAACC,QAAQ,CAAC;IACjC,CAAC;IACD,KAAKJ,OAAO,EAAE;EAClB,CAAC;EAED,MAAMK,wBAAwB,GAAGA,CAAA,KAAY;IACzC,MAAML,OAAO,GAAG,MAAAA,CAAA,KAA2B;MACvClB,eAAe,CAAC,IAAI,CAAC;MACrB,IAAIwB,KAAK,GAAG,EAAE;MAEd,IAAIf,MAAM,CAACgB,IAAI,EAAE,KAAK,EAAE,EAAE;QACtBD,KAAK,IAAI,SAAS,GAAGf,MAAM;MAC/B;MACA,IAAIE,eAAe,KAAK,YAAY,EAAE;QAClCa,KAAK,IAAI,YAAY,GAAGb,eAAe;MAC3C;MACA,IAAIE,WAAW,KAAK,YAAY,EAAE;QAC9BW,KAAK,IAAI,QAAQ,GAAGX,WAAW;MACnC;MACA,IAAIE,UAAU,KAAK,YAAY,EAAE;QAC7BS,KAAK,IAAI,OAAO,GAAGT,UAAU;MACjC;MAEA,MAAMI,OAAO,GAAG,MAAMzC,cAAc,CAAC8C,KAAK,CAAC;MAE3C,IAAIL,OAAO,KAAK,IAAI,EAAE;QAClB7B,YAAY,CAAC,8BAA8B,EAAE,QAAQ,CAAC;QACtD;MACJ;MAEA,IAAI6B,OAAO,CAACC,GAAG,KAAK,EAAE,EAAE;QACpB9B,YAAY,CAAC6B,OAAO,CAACC,GAAG,EAAE,QAAQ,CAAC;QACnC;MACJ;MAEA,MAAMC,IAAI,GAAGF,OAAO,CAACE,IAAI;MAEzBrB,eAAe,CAAC,KAAK,CAAC;MAEtB,IAAIqB,IAAI,KAAK,IAAI,EAAE;MAEnBzB,cAAc,CAACyB,IAAI,CAACC,QAAQ,CAAC;IACjC,CAAC;IACD,KAAKJ,OAAO,EAAE;EAClB,CAAC;EAED,MAAMQ,IAAI,GAAIC,SAAiB,IAAK;IAChC,MAAMT,OAAO,GAAG,MAAAA,CAAA,KAA2B;MACvC,MAAMC,OAAO,GAAG,MAAMvC,iBAAiB,CAAC+C,SAAS,CAAC;MAClD,IAAIR,OAAO,KAAK,IAAI,EAAE;QAClB7B,YAAY,CAAC,kCAAkC,EAAE,QAAQ,CAAC;QAC1D;MACJ;MAEA,IAAI6B,OAAO,CAACC,GAAG,KAAK,EAAE,EAAE;QACpB9B,YAAY,CAAC6B,OAAO,CAACC,GAAG,EAAE,QAAQ,CAAC;QACnC;MACJ;MACAG,wBAAwB,EAAE;MAC1BN,wBAAwB,EAAE;IAC9B,CAAC;IACD,KAAKC,OAAO,EAAE;EAClB,CAAC;EAEDjD,SAAS,CAAC,MAAM;IACZsD,wBAAwB,EAAE;EAC9B,CAAC,EAAE,CAACZ,eAAe,EAAEE,WAAW,EAAEE,UAAU,CAAC,CAAC;EAE9C9C,SAAS,CAAC,MAAM;IACZ,IAAIwC,MAAM,CAACgB,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1BF,wBAAwB,EAAE;EAC9B,CAAC,EAAE,CAACd,MAAM,CAAC,CAAC;EAEZxC,SAAS,CAAC,MAAM;IACZ,IAAIuB,iBAAiB,CAACoC,OAAO,EAAE;IAC/BpC,iBAAiB,CAACoC,OAAO,GAAG,IAAI;IAEhCX,wBAAwB,EAAE;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI/B,OAAA,CAAAC,SAAA;IAAA0C,QAAA,GACK,CAAAtC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEuC,IAAI,MAAK,eAAe,iBAC3B5C,OAAA,CAACF,aAAa;MAAC+C,MAAM,EAAE9B,mBAAoB;MAAC+B,SAAS,EAAE9B;IAAuB;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjF,eACDlD,OAAA,CAACb,MAAM;MAAAwD,QAAA,eACH3C,OAAA;QAAKmD,SAAS,EAAEtD,MAAM,CAACuD,YAAa;QAAAT,QAAA,eAChC3C,OAAA;UAAKmD,SAAS,EAAEtD,MAAM,CAACwD,OAAQ;UAAAV,QAAA,GAC1B,CAAAtC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEuC,IAAI,MAAK,eAAe,iBAC3B5C,OAAA;YAAKsD,OAAO,EAAEA,CAAA,KAAM;cAChBtC,sBAAsB,CAAC,IAAI,CAAC;YAChC,CAAE;YAAA2B,QAAA,EAAC;UAEH;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACH,eACDlD,OAAA;YAAKmD,SAAS,EAAEtD,MAAM,CAAC0D,kBAAmB;YAAAZ,QAAA,gBACtC3C,OAAA;cAAA2C,QAAA,EAAI;YAEJ;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,EACJvC,aAAa,gBACVX,OAAA;cAAKmD,SAAS,EAAG,GAAEtD,MAAM,CAAC2D,MAAO,IAAG7C,aAAa,IAAId,MAAM,CAAC4D,WAAY,EAAE;cAAAd,QAAA,eACtE3C,OAAA,CAACT,QAAQ;gBAAAwD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAG;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACV,gBAENlD,OAAA;cAAKmD,SAAS,EAAEtD,MAAM,CAAC6D,0BAA2B;cAAAf,QAAA,EAC7CpC,WAAW,CAACoD,GAAG,CAAC,CAACC,OAAiB,EAAEC,KAAa,KAAK;gBACnD,IAAI,CAACD,OAAO,CAACE,KAAK,EAAE,oBAChB9D,OAAA,CAAClB,QAAQ,MAAM+E,KAAK;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAa;gBAErC,oBACIlD,OAAA,CAAClB,QAAQ;kBAAA6D,QAAA,eACL3C,OAAA,CAACZ,UAAU;oBAACoD,IAAI,EAAEA,IAAK;oBAACuB,OAAO,EAAEH,OAAO,CAACE,KAAM;oBAACF,OAAO,EAAEA;kBAAQ;oBAAAb,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA;gBAAG,GADzDW,KAAK;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAET;cAEnB,CAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAET;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACC,eACNlD,OAAA;YAAKmD,SAAS,EAAEtD,MAAM,CAAC0D,kBAAmB;YAAAZ,QAAA,gBACtC3C,OAAA;cAAA2C,QAAA,EAAI;YAEJ;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,eACLlD,OAAA;cAAKmD,SAAS,EAAEtD,MAAM,CAACmE,eAAgB;cAAArB,QAAA,gBACnC3C,OAAA;gBAAKmD,SAAS,EAAEtD,MAAM,CAACoE,uBAAwB;gBAAAtB,QAAA,gBAC3C3C,OAAA;kBAAA2C,QAAA,eACI3C,OAAA;oBAAOkE,KAAK,EAAE3C,MAAO;oBAAC4C,QAAQ,EAAGC,CAAC,IAAK;sBACnC5C,SAAS,CAAC4C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;oBAC7B,CAAE;oBAACI,IAAI,EAAC,MAAM;oBAACC,WAAW,EAAC;kBAAQ;oBAAAxB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA;gBAAG;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAClC,EACP3B,MAAM,CAACgB,IAAI,EAAE,KAAK,EAAE,iBACjBvC,OAAA;kBAAQsD,OAAO,EAAEjB,wBAAyB;kBAAAM,QAAA,EAAC;gBAE3C;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACH;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACC,eACNlD,OAAA;gBAAKmD,SAAS,EAAEtD,MAAM,CAAC2E,uBAAwB;gBAAA7B,QAAA,gBAC3C3C,OAAA,CAACV,QAAQ;kBACLmF,IAAI,EAAC,YAAY;kBACjB5B,MAAM,EAAE5B,eAAgB;kBACxB6B,SAAS,EAAE5B,kBAAmB;kBAC9BwD,aAAa,EAAE7E,MAAM,CAAC8E,KAAM;kBAC5BC,QAAQ,EAAE/E,MAAM,CAACgF,GAAI;kBAAAlC,QAAA,EAEpB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,YAAY,CAAC,CAACgB,GAAG,CAAEmB,IAAY,IAAK;oBAChE,oBACI9E,OAAA;sBAAgBsD,OAAO,EAAEA,CAAA,KAAM;wBAC3B5B,kBAAkB,CAACoD,IAAI,CAAQ;wBAC/B5D,kBAAkB,CAAC,KAAK,CAAC;sBAC7B,CAAE;sBAACiC,SAAS,EAAG,GAAE1B,eAAe,KAAKqD,IAAI,IAAIjF,MAAM,CAACkF,MAAO,EAAE;sBAAApC,QAAA,EAAEmC;oBAAI,GAHzDA,IAAI;sBAAA/B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,QAG4D;kBAElF,CAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACK,eACXlD,OAAA,CAACV,QAAQ;kBACLmF,IAAI,EAAC,OAAO;kBACZ5B,MAAM,EAAE1B,WAAY;kBACpB2B,SAAS,EAAE1B,cAAe;kBAC1BsD,aAAa,EAAE7E,MAAM,CAAC8E,KAAM;kBAC5BC,QAAQ,EAAE/E,MAAM,CAACgF,GAAI;kBAAAlC,QAAA,EAEpB,CAAC,cAAc,EAAE,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC,CAACgB,GAAG,CAAEqB,KAAa,IAAK;oBAC7E,oBACIhF,OAAA;sBAAiBsD,OAAO,EAAEA,CAAA,KAAM;wBAC5B1B,cAAc,CAACoD,KAAK,CAAQ;wBAC5B5D,cAAc,CAAC,KAAK,CAAC;sBACzB,CAAE;sBAAC+B,SAAS,EAAG,GAAExB,WAAW,KAAKqD,KAAK,IAAInF,MAAM,CAACkF,MAAO,EAAE;sBAAApC,QAAA,EAAEqC;oBAAK,GAHvDA,KAAK;sBAAAjC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,QAGyD;kBAEhF,CAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACK,eACXlD,OAAA,CAACV,QAAQ;kBACLmF,IAAI,EAAC,MAAM;kBACX5B,MAAM,EAAExB,UAAW;kBACnByB,SAAS,EAAExB,aAAc;kBACzBoD,aAAa,EAAE7E,MAAM,CAAC8E,KAAM;kBAC5BC,QAAQ,EAAE/E,MAAM,CAACgF,GAAI;kBAAAlC,QAAA,EAEpB,CAAC,QAAQ,EAAE,aAAa,EAAE,SAAS,EAAE,YAAY,CAAC,CAACgB,GAAG,CAAEsB,KAAa,IAAK;oBACvE,oBACIjF,OAAA;sBAAiBsD,OAAO,EAAEA,CAAA,KAAM;wBAC5BxB,aAAa,CAACmD,KAAK,CAAQ;wBAC3B3D,aAAa,CAAC,KAAK,CAAC;sBACxB,CAAE;sBAAC6B,SAAS,EAAG,GAAEtB,UAAU,KAAKoD,KAAK,IAAIpF,MAAM,CAACkF,MAAO,EAAE;sBAAApC,QAAA,EAAEsC;oBAAK,GAHtDA,KAAK;sBAAAlC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,QAGwD;kBAE/E,CAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACK;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACT;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACJ,EAELrC,YAAY,gBACTb,OAAA,CAACT,QAAQ;cAAAwD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG,gBAEZlD,OAAA;cAAKmD,SAAS,EAAEtD,MAAM,CAAC6D,0BAA2B;cAAAf,QAAA,EAC7ClC,WAAW,CAACkD,GAAG,CAAC,CAACC,OAAiB,EAAEC,KAAa,KAAK;gBACnD,oBACI7D,OAAA,CAAClB,QAAQ;kBAAA6D,QAAA,eACL3C,OAAA,CAACX,YAAY;oBAACmD,IAAI,EAAEA,IAAK;oBAACuB,OAAO,EAAEH,OAAO,CAACE,KAAM;oBAACF,OAAO,EAAEA;kBAAQ;oBAAAb,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA;gBAAG,GAD3DW,KAAK;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAET;cAEnB,CAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAET;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACJ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAAA,gBACV;AAEX;AAAC/C,EAAA,CAxPQD,QAAQ;AAAAgF,EAAA,GAARhF,QAAQ;AA0PjB,eAAeA,QAAQ;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}