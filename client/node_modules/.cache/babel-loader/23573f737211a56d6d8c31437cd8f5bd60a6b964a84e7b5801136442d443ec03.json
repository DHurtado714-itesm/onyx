{"ast":null,"code":"import { MEDIDAS_ROUTE } from \"../index\";\nimport { getClientIdCache } from \"../../cache/auth\";\n// Messages complete\nexport const createMeasurement = async body => {\n  try {\n    const token = getClientIdCache();\n    if (token === null) {\n      return null;\n    }\n    const res = await fetch(MEDIDAS_ROUTE, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      },\n      body: JSON.stringify(body)\n    });\n    const resData = await res.json();\n    return resData;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};","map":{"version":3,"names":["MEDIDAS_ROUTE","getClientIdCache","createMeasurement","body","token","res","fetch","method","headers","Authorization","JSON","stringify","resData","json","error","console"],"sources":["C:/Users/danie/Documents/natgas/client/src/routes/medidas/medidas.routes.ts"],"sourcesContent":["import { MEDIDAS_ROUTE } from \"../index\";\r\nimport { getClientIdCache } from \"../../cache/auth\";\r\nimport { IData } from \"../routes.types\";\r\n\r\ninterface IMeasurement {\r\n\tmeasurement: number;\r\n\ttableName: string;\r\n}\r\n\r\n// Messages complete\r\nexport const createMeasurement = async (\r\n\tbody: IMeasurement\r\n): Promise<null | IData<IMeasurement>> => {\r\n\ttry {\r\n\t\tconst token = getClientIdCache();\r\n\r\n\t\tif (token === null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tconst res = await fetch(MEDIDAS_ROUTE, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\tAuthorization: token,\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(body),\r\n\t\t});\r\n\r\n\t\tconst resData = await res.json();\r\n\t\treturn resData;\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t\treturn null;\r\n\t}\r\n};\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,UAAU;AACxC,SAASC,gBAAgB,QAAQ,kBAAkB;AAQnD;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAChCC,IAAkB,IACuB;EACzC,IAAI;IACH,MAAMC,KAAK,GAAGH,gBAAgB,EAAE;IAEhC,IAAIG,KAAK,KAAK,IAAI,EAAE;MACnB,OAAO,IAAI;IACZ;IAEA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,aAAa,EAAE;MACtCO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACR,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAEL;MAChB,CAAC;MACDD,IAAI,EAAEO,IAAI,CAACC,SAAS,CAACR,IAAI;IAC1B,CAAC,CAAC;IAEF,MAAMS,OAAO,GAAG,MAAMP,GAAG,CAACQ,IAAI,EAAE;IAChC,OAAOD,OAAO;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACfC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,OAAO,IAAI;EACZ;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}